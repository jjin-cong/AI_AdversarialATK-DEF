{"cells":[{"cell_type":"markdown","metadata":{"id":"AYV_dMVDxyc2","pycharm":{"name":"#%% md\n"}},"source":["[![Github](https://img.shields.io/github/stars/labmlai/annotated_deep_learning_paper_implementations?style=social)](https://github.com/labmlai/annotated_deep_learning_paper_implementations)\n","[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/diffusion/ddpm/experiment.ipynb)\n","[![Open In Comet](https://images.labml.ai/images/comet.svg?experiment=capsule_networks&file=model)](https://www.comet.com/labml/diffuse/view/FknjSiKWotr8fgZerpC1sV1cy/panels?utm_source=referral&utm_medium=partner&utm_campaign=labml)\n","\n","## [Denoising Diffusion Probabilistic Models (DDPM)](https://nn.labml.ai/diffusion/ddpm/index.html)\n","\n","This notebook trains a DDPM based model on MNIST digits dataset."]},{"cell_type":"markdown","metadata":{"id":"AahG_i2y5tY9","pycharm":{"name":"#%% md\n"}},"source":["### Install the packages"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"ZCzmCrAIVg0L","pycharm":{"name":"#%%\n"},"executionInfo":{"status":"ok","timestamp":1659067298188,"user_tz":-540,"elapsed":2837,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["!pip install labml-nn comet_ml --quiet"]},{"cell_type":"markdown","metadata":{"pycharm":{"name":"#%% md\n"},"id":"iw4MDTf4rQJE"},"source":["### Enable [Comet](https://www.comet.ml)"]},{"cell_type":"code","execution_count":2,"metadata":{"pycharm":{"name":"#%%\n"},"id":"SOq2RgcFrQJF","executionInfo":{"status":"ok","timestamp":1659067298589,"user_tz":-540,"elapsed":407,"user":{"displayName":"김채현","userId":"06024775478798789360"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"badd389d-1073-43ee-aae8-efefc7d59db3"},"outputs":[{"output_type":"stream","name":"stderr","text":["COMET INFO: Comet API key is valid\n"]}],"source":["#@markdown Select in order to enable logging this experiment to [Comet](https://www.comet.ml).\n","use_comet = True #@param {type:\"boolean\"}\n","\n","if use_comet:\n","    import comet_ml\n","    comet_ml.init(project_name='diffusion')"]},{"cell_type":"markdown","metadata":{"id":"SE2VUQ6L5zxI","pycharm":{"name":"#%% md\n"}},"source":["### Imports"]},{"cell_type":"code","execution_count":3,"metadata":{"jupyter":{"outputs_hidden":false},"pycharm":{"name":"#%%\n"},"id":"_DuTmzQmrQJF","executionInfo":{"status":"ok","timestamp":1659067299724,"user_tz":-540,"elapsed":1138,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","\n","from labml import experiment\n","from labml.configs import option\n","from labml_nn.diffusion.ddpm.experiment import Configs"]},{"cell_type":"markdown","metadata":{"pycharm":{"name":"#%% md\n"},"id":"nqSdJj8YrQJF"},"source":["### Create an experiment"]},{"cell_type":"code","execution_count":4,"metadata":{"jupyter":{"outputs_hidden":false},"pycharm":{"name":"#%%\n"},"id":"cJSq2qXsrQJF","executionInfo":{"status":"ok","timestamp":1659067299725,"user_tz":-540,"elapsed":13,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["experiment.create(name=\"diffuse\", writers={\"screen\", \"comet\"} if use_comet else {'screen'})"]},{"cell_type":"markdown","metadata":{"pycharm":{"name":"#%% md\n"},"id":"Sk7kSpjprQJG"},"source":["### Configurations"]},{"cell_type":"code","execution_count":5,"metadata":{"jupyter":{"outputs_hidden":false},"pycharm":{"name":"#%%\n"},"id":"2LQXyOPArQJG","executionInfo":{"status":"ok","timestamp":1659067299725,"user_tz":-540,"elapsed":10,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["configs = Configs()"]},{"cell_type":"markdown","metadata":{"pycharm":{"name":"#%% md\n"},"id":"BZFZft8erQJG"},"source":["Set experiment configurations and assign a configurations dictionary to override configurations"]},{"cell_type":"code","execution_count":6,"metadata":{"jupyter":{"outputs_hidden":false},"pycharm":{"name":"#%%\n"},"id":"vE5WQeJhrQJG","colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"status":"ok","timestamp":1659067299726,"user_tz":-540,"elapsed":10,"user":{"displayName":"김채현","userId":"06024775478798789360"}},"outputId":"e46ee2fe-5f23-420a-fe15-4d80b050eb77"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<pre style=\"overflow-x: scroll;\"></pre>"]},"metadata":{}}],"source":["experiment.configs(configs, {\n","    'dataset': 'MNIST',\n","    'image_channels': 1,\n","    'epochs': 5,\n","})"]},{"cell_type":"markdown","metadata":{"pycharm":{"name":"#%% md\n"},"id":"KOfmw3nZrQJG"},"source":["Initializ"]},{"cell_type":"code","execution_count":7,"metadata":{"pycharm":{"name":"#%%\n"},"id":"2F8gX6K7rQJH","colab":{"base_uri":"https://localhost:8080/","height":375},"executionInfo":{"status":"error","timestamp":1659067303549,"user_tz":-540,"elapsed":3830,"user":{"displayName":"김채현","userId":"06024775478798789360"}},"outputId":"ba21f791-185d-443c-8b1d-a089786594d8"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<pre style=\"overflow-x: scroll;\">Prepare device.device...\n","  Prepare device.device_info<span style=\"color: #00A250\">...[DONE]</span><span style=\"color: #208FFB\">\t8.71ms</span>\n","Prepare device.device<span style=\"color: #00A250\">...[DONE]</span><span style=\"color: #208FFB\">\t15.59ms</span>\n","Prepare dataset<span style=\"color: #00A250\">...[DONE]</span><span style=\"color: #208FFB\">\t7.93ms</span>\n","</pre>"]},"metadata":{}},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-eed6c5793f23>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mconfigs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/labml_nn/diffusion/ddpm/experiment.py\u001b[0m in \u001b[0;36minit\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     96\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m         \u001b[0;31m# Create dataloader\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 98\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_loader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataLoader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpin_memory\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     99\u001b[0m         \u001b[0;31m# Create optimizer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    100\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimizer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mAdam\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meps_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlearning_rate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context, generator, prefetch_factor, persistent_workers, pin_memory_device)\u001b[0m\n\u001b[1;32m    345\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    346\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 347\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgenerator\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgenerator\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[arg-type]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    348\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    349\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[arg-type]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples, generator)\u001b[0m\n\u001b[1;32m    106\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m--> 108\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"]}],"source":["configs.init()"]},{"cell_type":"markdown","metadata":{"id":"EvI7MtgJ61w5","pycharm":{"name":"#%% md\n"}},"source":["Set PyTorch models for loading and saving"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GDlt7dp-5ALt","pycharm":{"name":"#%%\n"},"executionInfo":{"status":"aborted","timestamp":1659067303547,"user_tz":-540,"elapsed":266,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["experiment.add_pytorch_models({'eps_model': configs.eps_model})"]},{"cell_type":"markdown","metadata":{"id":"KJZRf8527GxL","pycharm":{"name":"#%% md\n"}},"source":["### Start the experiment and run the training loop."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aIAWo7Fw5DR8","pycharm":{"name":"#%%\n"},"executionInfo":{"status":"aborted","timestamp":1659067303548,"user_tz":-540,"elapsed":267,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":["# Start the experiment\n","with experiment.start():\n","    configs.run()"]},{"cell_type":"code","execution_count":null,"metadata":{"pycharm":{"name":"#%%\n"},"id":"2jDK9o_IrQJH","executionInfo":{"status":"aborted","timestamp":1659067303549,"user_tz":-540,"elapsed":4,"user":{"displayName":"김채현","userId":"06024775478798789360"}}},"outputs":[],"source":[""]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"name":"[ref] DDPM","provenance":[{"file_id":"https://github.com/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/diffusion/ddpm/experiment.ipynb","timestamp":1659026395076}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.12"},"gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}